"use strict";
var Template;
(function (Template) {
    Template.∆í = FudgeCore;
    Template.∆íS = FudgeStory;
    console.log("FudgeStory template starting");
    Template.transition = {
        fizzle: {
            duration: 1.3,
            alpha: "FreeTransitions/Others/005.jpg",
            edge: 2
        },
        waves: {
            duration: 1,
            alpha: "FreeTransitions/WipesAndOther/9.jpg",
            edge: 2
        }
    };
    Template.sound = {
        // music
        mainMusic: "Audio/Music/inspiration.mp3",
        spookyMusic: "Audio/Music/nightmare.mp3",
        splashMusic: "Audio/Music/hillofwind.mp3",
        // ambiance
        birds: "Audio/Ambiance/springBirds.wav",
        // SFX
        drop: "Audio/SFX/drop.mp3",
        schoolBell: "Audio/SFX/schoolBell.wav",
        sparkle: "Audio/SFX/sparkle.mp3",
        pageflip: "Audio/SFX/pageflip.wav",
        switch: "Audio/SFX/switch.wav",
        flashlight: "Audio/SFX/flashlight.wav",
        select: "Audio/SFX/select.wav",
        selectDialog: "Audio/SFX/selectdialog.wav",
        typing: "Audio/SFX/phone.wav",
        femalegasp: "Audio/SFX/femalegasp.mp3",
        shutter: "Audio/SFX/shutter.mp3",
        aua: "Audio/SFX/aua.wav",
        smallsigh: "Audio/SFX/defeated_sigh.wav",
        bigsigh: "Audio/SFX/heavy_sigh.wav"
    };
    Template.locations = {
        schoolOutsideDay: {
            name: "schoolOutsideDay",
            background: "Images/Backgrounds/school-outside-day.jpg",
            foreground: ""
        },
        schoolOutsideTwilight: {
            name: "schoolOutsideTwilight",
            background: "Images/Backgrounds/school-outside-twilight.jpg",
            foreground: ""
        },
        corridorDay: {
            name: "corridorDay",
            background: "Images/Backgrounds/corridor-day.jpg",
            foreground: ""
        },
        classroomDay: {
            name: "classroomDay",
            background: "Images/Backgrounds/classroom-day.jpg",
            foreground: ""
        },
        library: {
            name: "library",
            background: "Images/Backgrounds/library.png"
        },
        roof: {
            name: "roof",
            background: "Images/Backgrounds/roof-day.png"
        },
        stairs: {
            name: "stairs",
            background: "Images/Backgrounds/stairs-day.jpg"
        }
    };
    Template.chapterCovers = {
        chapterOne: {
            name: "chapterOne",
            background: "Images/Backgrounds/Kapitel/chapter-one.png",
            foreground: ""
        },
        chapterTwo: {
            name: "chapterTwo",
            background: "Images/Backgrounds/Kapitel/chapter-two.png",
            foreground: ""
        },
        chapter: {
            name: "chapter",
            background: "Images/Backgrounds/Kapitel/chapter-lilac.png",
            foreground: ""
        },
    };
    Template.items = {
        key: {
            name: "key",
            description: "Lucias Schl√ºssel",
            image: "Images/Items/key.png"
        }
    };
    Template.characters = {
        narrator: {
            name: "Narrator"
        },
        stranger: {
            name: "???"
        },
        protagonist: {
            name: "Du",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                angry: "Images/Characters/Protagonist/protagonist-angry.png",
                happy: "Images/Characters/Protagonist/protagonist-happy.png",
                happyEyesClosed: "Images/Characters/Protagonist/protagonist-happy-2.png",
                sad: "Images/Characters/Protagonist/protagonist-sad.png",
                neutral: "Images/Characters/Protagonist/protagonist-neutral.png",
                scared: "Images/Characters/Protagonist/protagonist-scared.png",
                mean: "Images/Characters/Protagonist/protagonist-mean.png",
                surprised: "Images/Characters/Protagonist/protagonist-surprised.png",
                confident: "Images/Characters/Protagonist/protagonist-confident.png",
                serious: "Images/Characters/Protagonist/protagonist-serious.png"
            }
        },
        kira: {
            name: "Kira",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                angry: "Images/Characters/Kira/kira-angry.png",
                happy: "Images/Characters/Kira/kira-happy.png",
                sad: "Images/Characters/Kira/kira-sad.png",
                neutral: "Images/Characters/Kira/kira-neutral.png",
                scared: "Images/Characters/Kira/kira-scared.png",
                unsure: "Images/Characters/Kira/kira-unsure.png",
                smiling: "Images/Characters/Kira/kira-smiling.png"
            }
        },
        girl: {
            name: "",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                annoyed: "Images/Characters/Girl/girl-annoyed.png",
                blushing: "Images/Characters/Girl/girl-blushing.png",
                smiling: "Images/Characters/Girl/girl-smiling.png",
                unsure: "Images/Characters/Girl/girl-unsure.png",
                upset: "Images/Characters/Girl/girl-upset.png",
                neutral: "Images/Characters/Girl/girl.png"
            }
        },
        atlas: {
            name: "Atlas",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                angry: "Images/Characters/Atlas/atlas-angry-2.png",
                happy: "Images/Characters/Atlas/atlas-happy-2.png",
                sad: "Images/Characters/Atlas/atlas-sad.png",
                neutral: "Images/Characters/Atlas/atlas-neutral.png",
                scared: "Images/Characters/Atlas/atlas-scared.png",
                playful: "Images/Characters/Atlas/atlas-playful.png"
            }
        },
        lucia: {
            name: "Lucia",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                neutral: "Images/Characters/Lucia/lucia-neutral.png",
                sad: "Images/Characters/Lucia/lucia-sad.png",
                smiling: "Images/Characters/Lucia/lucia-smiling.png",
                surprised: "Images/Characters/Lucia/lucia-surprised.png",
                unsure: "Images/Characters/Lucia/lucia-unsure.png",
                upset: "Images/Characters/Lucia/lucia-upset.png",
            }
        },
        solas: {
            name: "Solas",
            origin: Template.∆íS.ORIGIN.BOTTOMCENTER,
            pose: {
                neutral: "Images/Characters/Solas/solas-neutral.png",
                sad: "Images/Characters/Solas/solas-sad.png",
                happy: "Images/Characters/Solas/solas-happy.png",
                scared: "Images/Characters/Solas/solas-scared.png",
                angry: "Images/Characters/Solas/solas-angry.png",
                upset: "Images/Characters/Solas/solas-upset.png",
                thoughtful: "Images/Characters/Solas/solas-thoughtful.png",
                confused: "Images/Characters/Solas/solas-confused.png",
                unhappy: "Images/Characters/Solas/solas-unhappy.png",
            }
        }
    };
    async function simulateCameraFlash() {
        let shutter = document.getElementById("shutter");
        shutter.classList.add("on");
        Template.∆íS.Sound.play(Template.sound.shutter, 0.5, false);
        setTimeout(function () {
            shutter.classList.remove('on');
        }, 30 * 2 + 45);
    }
    Template.simulateCameraFlash = simulateCameraFlash;
    async function showAquiredPages() {
        let pages = ['<div class="aquiredPagesWrapper"><h1>Indizien</h1><p>Im Laufe des Spiels erh√§ltst du verschiedene Indizien, die du hier im Men√º jederzeit aufrufen kannst.</p><p>Klick einfach weiter, um sie dir noch einmal anzuschauen.</p></div>'];
        let current = 0;
        let numberAquired = 0;
        if (Template.dataForSave.luciaMotive == true) {
            numberAquired += 1;
            pages.push('<div class="smartphone">\
      <div class="content">\
          <div class="chatcontainer">\
              <p class="chatname">Lucia:</p>\
              <p>Ich bin es einfach leid tbh üòë Ich gebe alles f√ºr diesen Club, aber h√∂re ich mal ein Danke? Nein.</p>\
              <span class="time-right">11:00</span>\
          </div>\
          \
          <div class="chatcontainer darker">\
              <p class="chatname">Solas:</p>\
              <p>Das tut mir leid üò£</p>\
              <span class="time-right">11:01</span>\
          </div>\
          \
          <div class="chatcontainer">\
              <p class="chatname">Lucia:</p>\
              <p>Es liegt einfach daran, dass ich hinter den Kulissen arbeite. Nur, weil ich nicht als ‚≠êStar‚≠ê auf der B√ºhne stehe, werde ich von den anderen wie Luft behandelt.</p>\
              <span class="time-right">11:02</span>\
          </div>\
          \
          <div class="chatcontainer">\
              <p class="chatname">Lucia:</p>\
              <p>Ich will eigentlich nur etwas Wertsch√§tzung..</p>\
              <span class="time-right">11:02</span>\
          </div>\
          \
          <div class="chatcontainer darker">\
              <p class="chatname">Solas:</p>\
              <p>Das wird schon üåû In zwei Tagen ist die Premiere! Wenn am Ende alle applaudieren, stehen auch du und ich auf der B√ºhne.</p>\
              <span class="time-right">11:05</span>\
          </div>\
          </div>\
        </div>');
        }
        if (Template.dataForSave.atlasDiary == true) {
            numberAquired += 1;
            pages.push('<div class="diaryPageWrapper-flip">\
      <div class="diaryPage">\
      <p>Mein Tagebuch,</p>\
      <p>ich muss zugeben, dass ich frustriert bin. Sollen meine Bem√ºhungen umsonst gewesen sein?</p>\
      <p>Jeder mit Augen im Kopf muss doch erkennen, dass ich mit Abstand der beste Sch√ºler an dieser Schule bin... Trotzdem droht der Titel des Jahrgangsbesten mir nun abhanden zu kommen.</p>\
      <p>Ausgerechnet die stellvertretende Schulsprecherin macht mir Konkurrenz. Dabei erhalte ich die Auszeichnung jedes Schuljahr mit Leichtigkeit, also wie konnte es dazu kommen? Habe ich mich mit dem Amt des Schulsprechers und den vielen AGs etwa √ºbernommen?</p>\
      <p>Ich w√ºnschte, meine Stellvertreterin st√ºnde unter demselben Druck wie ich. Dann w√ºrden faire Bedingungen herrschen.</p>\
      <p style="text-align: right">Gezeichnet, Atlas.</p>\
      </div>\
      </div>');
        }
        if (Template.dataForSave.warningNote == true) {
            numberAquired += 1;
            pages.push('<div class="warningPageWrapper-flip">\
      <div class="warningPage">\
      <p>Meine M√∂chtegern-Detektive,</p>\
      <p>lasst das Scooby-D<bold>oo</bold>-Spiel besser sein.</p>\
      <p>Das is<bold>t</bold> eine Warnung.</p>\
      <p>Die n√§chste wird nicht so nett ausfallen...</p>\
      <p style="text-align: right;">- Eu<bold>e</bold>r "Saboteur"</p>\
      </div>\
      </div>;');
        }
        console.log("number: " + numberAquired);
        // multiple pages
        if (numberAquired > 0) {
            let flip = { back: "Zur√ºck", next: "Weiter", done: "x" };
            let choice;
            Template.∆íS.Text.setClass("allhints");
            do {
                Template.∆íS.Text.print(pages[current]);
                choice = await Template.∆íS.Menu.getInput(flip, "flip");
                if (numberAquired > 1) {
                    switch (choice) {
                        case flip.back:
                            current = Math.max(0, current - 1);
                            break;
                        case flip.next:
                            current = Math.min(numberAquired, current + 1);
                            break;
                    }
                }
                else {
                    switch (choice) {
                        case flip.back:
                            current = Math.max(0, current - 1);
                            break;
                        case flip.next:
                            current = Math.min(1, current + 1);
                            break;
                    }
                }
            } while (choice != flip.done);
            // single page
        }
        else {
            pages[0] = '<div class="aquiredPagesWrapper"><h1>Indizien</h1><p>Im Laufe des Spiels erh√§ltst du verschiedene Indizien, die du hier im Men√º jederzeit aufrufen kannst.</p><p>Hey, warte mal...! Du hast bisher noch gar keine Indizien gesammelt. Dachtest du, das merke ich nicht?</p><p>Spiel einfach weiter, dann kommt das schon.</p></div>';
            let close = { done: "x" };
            let choice;
            Template.∆íS.Text.setClass("allhints");
            do {
                Template.∆íS.Text.print(pages[current]);
                choice = await Template.∆íS.Menu.getInput(close, "pageclose");
            } while (choice != close.done);
        }
        Template.∆íS.Text.close();
    }
    Template.showAquiredPages = showAquiredPages;
    function findFavorite() {
        let favorite = "Atlas";
        if (Template.dataForSave.atlasScore < Template.dataForSave.solasScore) {
            favorite = "Solas";
        }
        if (Template.dataForSave.solasScore < Template.dataForSave.luciaScore) {
            favorite = "Lucia";
        }
        return favorite;
    }
    Template.findFavorite = findFavorite;
    function updateNotes() {
        Template.dataForSave.toggleSuspectsButton = true;
        let toggleSuspects = document.getElementById("toggleSuspects");
        toggleSuspects.style.visibility = "visible";
        toggleSuspects.style.opacity = "1";
        let toggleAquiredPages = document.getElementById("toggleAquiredPages");
        toggleAquiredPages.style.visibility = "visible";
        toggleAquiredPages.style.opacity = "1";
        // Portraits
        if (Template.dataForSave.atlasPortrait == true) {
            let atlasPortrait = document.getElementById("atlasPortrait");
            atlasPortrait.style.filter = "unset";
        }
        if (Template.dataForSave.solasPortrait == true) {
            let solasPortrait = document.getElementById("solasPortrait");
            solasPortrait.style.filter = "unset";
        }
        if (Template.dataForSave.luciaPortrait == true) {
            let luciaPortrait = document.getElementById("luciaPortrait");
            luciaPortrait.style.filter = "unset";
        }
        // Motives
        if (Template.dataForSave.solasMotive == true) {
            let solasMotive = document.getElementById("solasMotive");
            solasMotive.innerHTML = "Er k√∂nnte die Auff√ºhrung sabotieren, weil er ein Perfektionist ist und mehr Zeit braucht, um das Skript zu optimieren.";
        }
        if (Template.dataForSave.atlasMotive == true) {
            if (Template.dataForSave.atlasDiary == true) {
                let atlasMotive = document.getElementById("atlasMotive");
                atlasMotive.innerHTML = "Er k√∂nnte die Sabotage inszenieren, um dich von der Schule abzulenken, sodass er Jahrgangsbester bleibt.";
            }
            else {
                let atlasMotive = document.getElementById("atlasMotive");
                atlasMotive.innerHTML = "? ? ?";
            }
        }
        if (Template.dataForSave.luciaMotive == true) {
            let luciaMotive = document.getElementById("luciaMotive");
            luciaMotive.innerHTML = "Sie k√∂nnte aus Rache die Sabotage begehen, weil ihr als Mitglied hinter den Kulissen die Wertsch√§tzung fehlt.";
        }
        // Hints
        if (Template.dataForSave.luciaOpportunity == true) {
            let luciaOpportunity = document.getElementById("luciaOpportunity");
            luciaOpportunity.innerHTML = "Sie sagt, sie habe den Schl√ºssel zum Theaterraum verloren. Stimmt das...?";
        }
        if (Template.dataForSave.atlasOpportunity == true) {
            let atlasOpportunity = document.getElementById("atlasOpportunity");
            atlasOpportunity.innerHTML = "Das M√§dchen auf dem Flur ( " + Template.dataForSave.nameGirl + " ) gibt Atlas ein Alibi.";
        }
        if (Template.dataForSave.lookedForKey == true) {
            let whatAboutKey = document.getElementById("whatAboutKey");
            if (Template.dataForSave.foundKey == true) {
                whatAboutKey.innerHTML = "Lucia hat die Wahrheit gesagt. Vetrauensbonus!";
            }
            else {
                whatAboutKey.innerHTML = "Du konntest nicht herausfinden, ob Lucia l√ºgt.";
            }
        }
        if (Template.dataForSave.aboutAlibi == true) {
            let aboutAlibi = document.getElementById("aboutAlibi");
            aboutAlibi.innerHTML = "Die Glaubw√ºrdigkeit von " + Template.dataForSave.nameGirl + " ist zweifelhaft, da sie in Atlas verliebt ist.";
        }
        if (Template.dataForSave.solasHandwriting == true) {
            let solasHandwriting = document.getElementById("solasHandwriting");
            solasHandwriting.innerHTML = "Die Schrift auf der Notiz des T√§ters sieht aus wie Solas Schrift.";
        }
        if (Template.dataForSave.confrontedSolas == true) {
            if (Template.dataForSave.solasHandwriting == true) {
                let solasPlea = document.getElementById("solasPlea");
                solasPlea.innerHTML = "Solas argumentiert, dass jemand seine Handschrift gef√§lscht haben k√∂nnte. Wer k√§me daf√ºr infrage? Oder lockt er dich auf eine falsche F√§hrte?";
            }
            else {
                let solasPlea = document.getElementById("solasPlea");
                solasPlea.innerHTML = "Solas zeigt Mitleid mit der Kost√ºmschneiderin, aber auch mit dem T√§ter.";
            }
        }
    }
    Template.updateNotes = updateNotes;
    function removeFallingLeaves() {
        let leaves = document.getElementById("leaves");
        leaves.remove();
    }
    Template.removeFallingLeaves = removeFallingLeaves;
    function addFallingLeaves() {
        let scene = document.getElementById("scene");
        let div = document.createElement("div");
        div.id = "leaves";
        for (let index = 0; index < 15; index++) {
            let i = document.createElement("i");
            div.appendChild(i);
        }
        scene.appendChild(div);
    }
    Template.addFallingLeaves = addFallingLeaves;
    // create chapter cover text
    function createText(givenheadline, giventext1, giventext2, givenid) {
        let scene = document.getElementById("scene");
        // create div
        let div = document.createElement("div");
        div.classList.add("coverDialog");
        div.id = givenid;
        // create headline, append to div
        let headline = document.createElement("h1");
        let headlineContent = document.createTextNode(givenheadline);
        headline.appendChild(headlineContent);
        div.appendChild(headline);
        // create text, append to div
        let ptag1 = document.createElement("p");
        let text1 = document.createTextNode(giventext1);
        ptag1.appendChild(text1);
        div.appendChild(ptag1);
        let ptag2 = document.createElement("p");
        let text2 = document.createTextNode(giventext2);
        ptag2.appendChild(text2);
        div.appendChild(ptag2);
        // append div to scene
        scene.appendChild(div);
    }
    Template.createText = createText;
    // animation tutorial
    function animation() {
        return {
            start: { translation: Template.∆íS.positions.bottomleft, rotation: -20, scaling: new Template.∆íS.Position(0.5, 1.5) },
            end: { translation: Template.∆íS.positions.bottomright, rotation: 20, scaling: new Template.∆íS.Position(1.5, 0.5) },
            duration: 1,
            playmode: Template.∆íS.ANIMATION_PLAYMODE.LOOP
        };
    }
    Template.animation = animation;
    // visibility solas meter
    function showSolasMeter() {
        document.getElementsByName("solasScore").forEach(meterStuffSolas => meterStuffSolas.hidden = false);
    }
    Template.showSolasMeter = showSolasMeter;
    function hideSolasMeter() {
        document.getElementsByName("solasScore").forEach(meterStuffSolas => meterStuffSolas.hidden = true);
    }
    Template.hideSolasMeter = hideSolasMeter;
    // visibility atlas meter
    function showAtlasMeter() {
        document.getElementsByName("atlasScore").forEach(meterStuffAtlas => meterStuffAtlas.hidden = false);
    }
    Template.showAtlasMeter = showAtlasMeter;
    function hideAtlasMeter() {
        document.getElementsByName("atlasScore").forEach(meterStuffAtlas => meterStuffAtlas.hidden = true);
    }
    Template.hideAtlasMeter = hideAtlasMeter;
    // visibility lucia meter
    function showLuciaMeter() {
        document.getElementsByName("luciaScore").forEach(meterStuffLucia => meterStuffLucia.hidden = false);
    }
    Template.showLuciaMeter = showLuciaMeter;
    function hideLuciaMeter() {
        document.getElementsByName("luciaScore").forEach(meterStuffLucia => meterStuffLucia.hidden = true);
    }
    Template.hideLuciaMeter = hideLuciaMeter;
    // let speechInDom = document.getElementById("speech");
    // speechInDom.addEventListener("change", listenSpeechChange);
    // function listenSpeechChange() {
    //   console.log("speaking");
    // }
    Template.dataForSave = {
        nameGirl: "Cat",
        // visibility of buttons in menu
        toggleSuspectsButton: false,
        // visibility of elements in notes window
        solasPortrait: false,
        solasMotive: false,
        solasHandwriting: false,
        confrontedSolas: false,
        atlasPortrait: false,
        atlasMotive: false,
        atlasOpportunity: false,
        aboutAlibi: false,
        atlasDiary: false,
        atlasNoDiary: false,
        luciaPortrait: false,
        luciaMotive: false,
        luciaOpportunity: false,
        // meterbars
        atlasScore: 20,
        luciaScore: 50,
        solasScore: 50,
        warningNote: false,
        foundKey: false,
        lookedForKey: false
    };
    window.addEventListener("load", start);
    function start(_event) {
        //Men√º
        Template.gameMenu = Template.∆íS.Menu.create(Template.menuInGame, Template.buttonFunctionalities, "menuInGame"); //hier CSS Klasse angeben
        let scenes = [
            // { scene: intro, name: "Einleitung"},
            // { scene: beta, name: "beta" },
            // { scene: coverChapterOne, name: "Kapitel" },
            // { scene: motive, name: "Treffe die Verd√§chtigen" },
            // { scene: lightsOut, name: "Im Theaterraum gehen die Lichter aus" },
            // { scene: coverChapterTwo, name: "Kapitel" },
            // { scene: girlOnCorridor, name: "Ein M√§dchen stoppt dich auf dem Flur" },
            { scene: Template.lookForKey, name: "Suche nach Lucias Schl√ºssel" },
            { id: "kiraGivesHint", scene: Template.kiraGivesHint, name: "Kira gibt einen Hinweis" },
            { id: "luciaGivesHint", scene: Template.luciaGivesHint, name: "Lucia gibt einen Hinweis" },
            { id: "confrontSolasAfterKira", scene: confrontSolasAfterKira, name: "Konfrontation mit Solas" },
            { id: "confrontSolasAfterLucia", scene: Template.confrontSolasAfterLucia, name: "Konfrontation mit Solas" },
            { scene: Template.yourConclusion, name: "Du sagst Kira, wen du f√ºr den T√§ter h√§ltst." },
            { id: "roofAtlas", scene: Template.roofAtlas, name: "Verd√§chtige Atlas" },
            { id: "roofLucia", scene: Template.roofLucia, name: "Verd√§chtige Lucia" },
            { id: "roofSolas", scene: Template.roofSolas, name: "Verd√§chtige Solas" }
        ];
        // let uiElement: HTMLElement = document.querySelector("[type=interface]");
        // dataForSave = ∆íS.Progress.setData(dataForSave, uiElement);
        let atlasInterface = document.getElementById("atlasInterface");
        Template.dataForSave = Template.∆íS.Progress.setData(Template.dataForSave, atlasInterface);
        let luciaInterface = document.getElementById("luciaInterface");
        Template.dataForSave = Template.∆íS.Progress.setData(Template.dataForSave, luciaInterface);
        let solasInterface = document.getElementById("solasInterface");
        Template.dataForSave = Template.∆íS.Progress.setData(Template.dataForSave, solasInterface);
        Template.∆íS.Speech.clear();
        // start the sequence
        Template.∆íS.Progress.go(scenes);
    }
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function Scene() {
        console.log("FudgeStory Template Scene starting");
    }
    Template.Scene = Scene;
})(Template || (Template = {}));
var Template;
(function (Template) {
    //  MENU - Audio functions
    Template.volume = 1.0;
    Template.volumeBeforeMute = 1.0;
    function incrementSound() {
        if (Template.volume >= 100)
            return;
        Template.volume += 0.2;
        Template.∆íS.Sound.setMasterVolume(Template.volume);
    }
    Template.incrementSound = incrementSound;
    function decrementSound() {
        if (Template.volume <= 0)
            return;
        Template.volume -= 0.2;
        Template.∆íS.Sound.setMasterVolume(Template.volume);
    }
    Template.decrementSound = decrementSound;
    function toggleSound() {
        let toggleSound = document.getElementById("toggleSound");
        toggleSound.classList.toggle("active");
        if (Template.volume > 0) {
            Template.volumeBeforeMute = Template.volume;
            Template.volume = 0;
            Template.∆íS.Sound.setMasterVolume(Template.volume);
        }
        else {
            Template.∆íS.Sound.setMasterVolume(Template.volumeBeforeMute);
            Template.volume = Template.volumeBeforeMute;
        }
    }
    Template.toggleSound = toggleSound;
    function showSuspects() {
        let toggleSuspects = document.getElementById("toggleSuspects");
        toggleSuspects.classList.toggle("active");
        var element = document.getElementById("suspects");
        element.classList.toggle("hidden");
    }
    Template.showSuspects = showSuspects;
    function showCredits() {
        Template.∆íS.Text.setClass("credits hint");
        let credits = "<h1>Credits</h1>\
            <table>\
            <tr>\
                <td>Falling Leaves CSS</td>\
                <td>Aaron Griffin, https://codepen.io/uurrnn/pen/WNLVdN</td>\
            </tr>\
            </table>\
          ";
        Template.∆íS.Text.print(credits);
    }
    Template.showCredits = showCredits;
    ;
    function showShortcuts() {
        Template.∆íS.Text.setClass("shortcuts hint");
        let shortcuts = "<h1>Shortcuts</h1>\
        <table>\
          <tr>\
            <td>Menu (open/close)</td>\
            <td>M</td>\
          </tr>\
          <tr>\
            <td>Full-screen Windows</td>\
            <td>f11</td>\
          </tr>\
          <tr>\
            <td>Full-screen Mac</td>\
            <td>Ctrl - Cmd ‚Äì F </td>\
          </tr>\
          <tr>\
            <td>Save</td>\
            <td>S</td>\
          </tr>\
          <tr>\
            <td>Load</td>\
            <td>L</td>\
          </tr>\
        </table>\
        ";
        Template.∆íS.Text.print(shortcuts);
    }
    Template.showShortcuts = showShortcuts;
    ;
    // MENU
    Template.menuInGame = {
        save: "Save",
        load: "Load",
        // close: "Close",
        credits: "Credits",
        shortcuts: "Shortcuts",
        toggleSound: "Sound",
        turnUpVolume: "+",
        turnDownVolume: "-",
        toggleSuspects: "Notes",
        toggleAquiredPages: "Indizien"
    };
    // true = offen; false = geschlossen
    Template.menuOpen = true;
    async function buttonFunctionalities(_option) {
        console.log(_option);
        switch (_option) {
            case Template.menuInGame.save:
                await Template.∆íS.Progress.save();
                break;
            case Template.menuInGame.load:
                await Template.∆íS.Progress.load();
                break;
            // case menuInGame.close:
            //     gameMenu.close();
            //     menuOpen = false;
            //     break;
            case Template.menuInGame.credits:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                showCredits();
                break;
            case Template.menuInGame.shortcuts:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                showShortcuts();
                break;
            case Template.menuInGame.toggleSound:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                toggleSound();
                break;
            case Template.menuInGame.turnUpVolume:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                incrementSound();
                break;
            case Template.menuInGame.turnDownVolume:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                decrementSound();
                break;
            case Template.menuInGame.toggleSuspects:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                showSuspects();
                break;
            case Template.menuInGame.toggleAquiredPages:
                Template.∆íS.Sound.play(Template.sound.select, 2, false);
                Template.showAquiredPages();
                break;
        }
    }
    Template.buttonFunctionalities = buttonFunctionalities;
    // Shortcuts
    document.addEventListener("keydown", hndKeyPress);
    async function hndKeyPress(_event) {
        switch (_event.code) {
            case Template.∆í.KEYBOARD_CODE.S:
                await Template.∆íS.Progress.save();
                break;
            case Template.∆í.KEYBOARD_CODE.L:
                await Template.∆íS.Progress.load();
                break;
            // case ∆í.KEYBOARD_CODE.F9:
            //     if (dataForSave.toggleSuspectsButton == true) {
            //         showSuspects();
            //     }
            //     break;
            // case ∆í.KEYBOARD_CODE.F8:
            //     if (dataForSave.toggleSuspectsButton == true) {
            //         showAquiredPages();
            //     }
            //     break;
            case Template.∆í.KEYBOARD_CODE.M:
                if (Template.menuOpen) {
                    console.log("Schlie√üen");
                    Template.gameMenu.close();
                    Template.menuOpen = false;
                }
                else {
                    console.log("√ñffnen");
                    Template.gameMenu.open();
                    Template.menuOpen = true;
                }
                break;
        }
    }
    Template.hndKeyPress = hndKeyPress;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function beta() {
        // name the girl
        Template.dataForSave.nameGirl = await Template.∆íS.Speech.getInput();
        await Template.∆íS.update(0.5);
        Template.characters.girl.name = Template.dataForSave.nameGirl;
    }
    Template.beta = beta;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function confrontSolasAfterLucia() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Hallo, Solas. Ich muss noch einmal mit dir sprechen.",
                T0002: "Der T√§ter hat uns eine Warnung zukommen lassen. Die Handschrift darauf sieht aus wie deine.",
                T0003_good: "Hellseherisches Talent",
                T0003_bad: "Ich nicht, aber Kira.",
                T0003_2_good: "Das stimmt wohl.",
                T0003_2_bad: "Das bef√ºrchte ich auch.",
                T0004: "Du wirkst sehr gefasst... Wenn du unschuldig w√§rst, w√ºrdest du nicht so ruhig reagieren.",
                T0005_bad: "Wie poetisch.",
                T0005_good: "Ich glaube, ich habe gerade einen Blick erhascht.",
                T0006: "Die Uhr tickt... Ich muss mit Kira sprechen."
            }
        };
        let solasText = {
            Solas: {
                T0001: "Sicher doch, was gibt es?",
                T0002: "Ist das so? Woher kennst du meine Handschrift?",
                T0003_a: "Wenn du wirklich eine Hellseherin w√§rst, m√ºsstest du nicht Detektiv spielen, oder?",
                T0003_b: "Kira also... Vielleicht kennt sie mich nicht so gut, wie sie glaubt.",
                T0004: "Es gibt nur zwei M√∂glichkeiten.",
                T0005: "1. Jemand der anderen beiden hat meine Handschrift imitiert, um mir die Sache anzuh√§ngen. Doch wer k√§me daf√ºr infrage? Oder...",
                T0006: "2. Ich versuche gerade, dich zu manipulieren. Ein letzter Verzweiflungsakt, nachdem du mich √ºberf√ºhrt hast.",
                T0007: "Niccol√≥ Machiavelli hat einmal gesagt: 'Jeder sieht wie du zu sein scheinst, wenige f√ºhlen heraus wie du bist.'",
                T0008: "Wir k√∂nnen einander nicht ins Herz schauen. Darin liegt die eigentliche Trag√∂die.",
                T0009: "Ich muss jetzt weiter. Bis bald."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Du begibst dich auf die Suche nach Solas. Du findest ihn schlie√ülich drau√üen auf dem Schulhof."
            }
        };
        await Template.∆íS.Location.show(Template.locations.schoolOutsideTwilight);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        return "yourConclusion";
    }
    Template.confrontSolasAfterLucia = confrontSolasAfterLucia;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function confrontSolasAfterLucia() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Hallo, Solas. Ich muss noch einmal mit dir sprechen.",
                T0002: "Ich habe inzwischen einige Hinweise gesammelt. Du bleibst mir aber nach wie vor ein R√§tsel.",
                T0003_bad: "Und dein Ergebnis?",
                T0003_good: "Sag mir, was du denkst.",
                T0004: "Wie meinst du das?",
                T0005_bad: "Ich werde nicht schlau aus dir.",
                T0005_good: "Ich glaube, ich verstehe."
            }
        };
        let solasText = {
            Solas: {
                T0001: "Sicher doch, was gibt es?",
                T0002: "Ist das so, ja? Ich habe selbst den ganzen Tag √ºber die Sache nachgedacht.",
                T0003: "Mir tut unsere Kost√ºmschneiderin leid. Sie n√§ht sehr kunstvoll und steckt ihr Herz in jedes Projekt. Wie du wei√üt, wurde eines der Kost√ºme zerst√∂rt...",
                T0004: "Aber auch der Saboteur hat meine Anteilnahme. Seine Handlungen zeugen von einem Gef√ºhl der Ratlosigkeit, denkst du nicht?",
                T0005: "Du verd√§chtigst uns alle aus verschiedenen Gr√ºnden, aber hinter jedem Motiv, das du uns zugeschrieben hast, steht der Ehrgeiz.",
                T0006: "...und das eigentliche Wesen des Ehrgeizes ist nur der Schatten eines Traumes."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Du begibst dich auf die Suche nach Solas. Du findest ihn schlie√ülich drau√üen auf dem Schulhof."
            }
        };
        await Template.∆íS.Location.show(Template.locations.schoolOutsideTwilight);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        return "yourConclusion";
    }
    Template.confrontSolasAfterLucia = confrontSolasAfterLucia;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function coverChapterOne() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let narratorText = {
            Narrator: {
                T0001: "Klicke, um fortzufahren."
            }
        };
        await Template.∆íS.Location.show(Template.chapterCovers.chapterOne);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        Template.∆íS.Sound.play(Template.sound.pageflip, 0.5, false);
    }
    Template.coverChapterOne = coverChapterOne;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function coverChapterTwo() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let narratorText = {
            Narrator: {
                T0001: "Klicke, um fortzufahren."
            }
        };
        await Template.∆íS.Location.show(Template.chapterCovers.chapterTwo);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        Template.∆íS.Sound.play(Template.sound.pageflip, 0.5, false);
    }
    Template.coverChapterTwo = coverChapterTwo;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function girlOnCorridor() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Huh?",
                T0002: "Warte, ich kenne dich. Du hei√üt doch... ",
                T0003: "Wenn du es so ausdr√ºcken willst, sicher.",
                T0004_a: "Oh? Er hat dich gar nicht erw√§hnt.",
                T0004_b: "Nachhilfe? Ich h√§tte nicht gedacht, dass Atlas so ein guter Samariter ist.",
                T0005: "Was f√ºr ein h√∂fliches M√§dchen."
            }
        };
        let girlText = {
            Girl: {
                T0001: "Hey, du!",
                T0002: "Ganz recht. Ich wei√ü auch, wer du bist. Du schn√ºffelst rum wegen dem Chaos im Theaterclub, oder nicht?",
                T0003: "Ich habe geh√∂rt, dass du Atlas verd√§chtigst. Das kannst du sch√∂n sein lassen. In der Zeitspanne, als das Kost√ºm zerst√∂rt wurde, war er bei mir. Er gibt mir Nachhilfe in Physik.",
                T0004: "N-Nicht? Tja, nun wei√üt du es.",
                T0005: "Jetzt entschuldige mich, ich muss in den Unterricht."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Es ist fr√ºh morgens und du betrittst die Schule. Nach ein paar Schritten stoppt dich ein M√§dchen auf dem Korridor.",
                T0001: "Sie dreht sich ohne ein weiteres Wort um und macht sich aus dem Staub.",
                T0002: "Du machst eine Notiz, dann gehst auch du in deine Klasse."
                // T0002: "Es ist Pause! W√§hrend des Unterrichts sind deine Gedanken immer wieder abgedriftet."
            }
        };
        let optionsAtlasTutoring = {
            good: "Oh? Er hat dich gar nicht erw√§hnt.",
            bad: "Nachhilfe? Ich habe nicht erwartet, dass Atlas so ein guter Samariter ist."
        };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0000);
        await Template.∆íS.Character.show(Template.characters.girl, Template.characters.girl.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell("???", girlText.Girl.T0001);
        await Template.∆íS.Character.hide(Template.characters.girl);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        // name the girl
        Template.dataForSave.nameGirl = await Template.∆íS.Speech.getInput();
        Template.dataForSave.nameGirl = Template.dataForSave.nameGirl.charAt(0).toUpperCase() + Template.dataForSave.nameGirl.slice(1);
        Template.characters.girl.name = Template.dataForSave.nameGirl;
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.girl, Template.characters.girl.pose.annoyed, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.girl, girlText.Girl.T0002);
        await Template.∆íS.Character.hide(Template.characters.girl);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.girl, Template.characters.girl.pose.upset, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.girl, girlText.Girl.T0003);
        await Template.∆íS.update(0.5);
        let optionsAtlasTutoringElement = await Template.∆íS.Menu.getInput(optionsAtlasTutoring, "dialogoptions");
        Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
        switch (optionsAtlasTutoringElement) {
            case optionsAtlasTutoring.good:
                Template.showAtlasMeter();
                await Template.∆íS.update(0.5);
                Template.dataForSave.atlasScore += 7;
                await Template.∆íS.update(0.5);
                Template.hideAtlasMeter();
                break;
            case optionsAtlasTutoring.bad:
                Template.showAtlasMeter();
                await Template.∆íS.update(0.5);
                Template.dataForSave.atlasScore -= 7;
                await Template.∆íS.update(0.5);
                Template.hideAtlasMeter();
                break;
        }
        await Template.∆íS.Character.show(Template.characters.girl, Template.characters.girl.pose.annoyed, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.girl, girlText.Girl.T0004);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.hide(Template.characters.girl);
        await Template.∆íS.Character.show(Template.characters.girl, Template.characters.girl.pose.unsure, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.girl, girlText.Girl.T0005);
        await Template.∆íS.Character.hide(Template.characters.girl);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.Character.hide(Template.characters.girl);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0005);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
        Template.dataForSave.atlasOpportunity = true;
        Template.updateNotes();
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.girlOnCorridor = girlOnCorridor;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function intro() {
        let strangerText = {
            Stranger: {
                T0001: "Entschuldigung!",
                T0002: "Es tut mir leid, falls ich dich st√∂re, aber ich brauche deine Hilfe. Du bist Schulsprecherin, richtig?",
                T0003: "Ich wei√ü nicht, wie ich es erkl√§ren soll, aber... Ich glaube, jemand sabotiert den Theaterclub.",
            }
        };
        let narratorText = {
            Narrator: {
                T0001: "Die Glocke zur Pause schl√§gt. Endlich! Du schlenderst nach drau√üen und erfreust dich an der Nachmittagssonne.",
                T0002: "Du drehst dich um und erblickst ein M√§dchen, das dir bekannt vorkommt. Sie geht nicht in deine Klasse, also woher...?",
                T0003: "Du schaust zu, wie Kira im Schulgeb√§ude verschwindet.",
                T0004: "Du hast ein Notizheft angelegt. Sehr vorbildlich, du Mustersch√ºlerin! Du kannst es ab jetzt im Men√º unter 'Notes' einblenden."
            }
        };
        let kiraText = {
            Kira: {
                T0001: "Ja, das stimmt.",
                T0001_2: "Wir stecken gerade mitten in den Proben f√ºr die n√§chste Auff√ºhrung. Aber seit ein paar Tagen l√§uft alles schief.",
                T0002: "Zum Beispiel letztens. Da verschwanden alle Skripte aus unserem Clubraum. Oder gestern, da fanden wir pl√∂tzlich eines der Kost√ºme im M√ºll. Es war total zerschnitten! Jemand hat es auf uns abgesehen, denkst du nicht?",
                T0003_a: "Eigentlich w√§re ich damit zum ersten Schulsprecher gegangen, aber er geh√∂rt selbst zum Theaterclub. Es ist besser, wenn sich ein Au√üenstehender damit besch√§ftigt.",
                T0003_b: "Hah, du bist ja drollig. Eigentlich w√§re ich damit zum ersten Schulsprecher gegangen, aber er geh√∂rt selbst zum Theaterclub. Es ist besser, wenn sich ein Au√üenstehender damit besch√§ftigt.",
                // T0003_2: "Eigentlich w√§re ich damit zum ersten Schulsprecher gegangen, aber er geh√∂rt selbst zum Theaterclub. Es ist besser, wenn sich ein Au√üenstehender damit besch√§ftigt.",
                T0003_3: "Ich wei√ü zuf√§llig, dass du nicht auf den Kopf gefallen bist. Immer, wenn ich dich sehe, steckt deine Nase in einem Buch... Und auf der Ziellinie zur Jahrgangsbesten bist du auch. Also, was sagst du?",
                T0004: "Ehm... Es hatten soweit ich wei√ü nur drei Sch√ºler freien Zugang zum Theaterraum und damit Gelegenheit zu der Sabotage...",
                T0004_2: "Zun√§chst Solas. Er ist der Autor des St√ºcks.",
                T0004_3: "Dann ist da Atlas, der Schulsprecher. Er spielt die m√§nnliche Hauptrolle.",
                T0004_4: "Und zuletzt gibt es noch Lucia. Sie k√ºmmert sich um die Technik.",
                T0005: "Vielen Dank! Dann sehe ich dich dort."
            }
        };
        let protagonistText = {
            Protagonist: {
                T0001: "Das beste am Schultag ist die Pause... Kein Lehrer scheucht dich √ºber den Sportplatz oder zwingt dich, an der Tafel Matheaufgaben zu l√∂sen.",
                T0002: "Ich kann mich entspannen und lesen, die Stimmen der anderen verschmelzen zu einem Rauschen im Hintergrund. Himmlisch!",
                T0003: "Nanu? Spricht da jemand mit mir?",
                T0004: "Stellvertretende Schulsprecherin, wenn man es genau nimmt. Was gibt‚Äôs denn?",
                T0005: "Nat√ºrlich. Jetzt wei√ü ich, woher ich dich kenne. Du bist Kira, die Leiterin des Theaterclubs.",
                T0006: "Wie meinst du das?",
                T0007_a: "Das klingt in der Tat seltsam. Aber wieso kommst du damit zu mir?",
                T0007_b: "Ein Geist war das jedenfalls nicht... Aber wieso kommst du damit zu mir?",
                T0008_a: "Wei√üt du, der Sch√ºlerrat ist eigentlich keine Detektei... Egal. Nat√ºrlich helfe ich dir, das geh√∂rt zu meinen Pflichten dazu. Du siehst selber ganz helle aus, hast du bereits Verd√§chtige?",
                T0008_b: "Ich bin dabei! Zu einem guten Mystery sage ich nicht nein. Du siehst selber ganz helle aus, hast du bereits Verd√§chtige?",
                T0009: "In Ordnung. Ich begleite dich zu der Probe heute und nehme die drei mal unter die Lupe.",
                T0010: "Komisch. Was f√ºr einen Grund sollte jemand haben, eine Theaterauff√ºhrung zu sabotieren? Naja, das finde ich bald heraus... Am besten, ich mache mir Notizen wie ein richtiger Ermittler.",
                T0011: "Perfekt! Wenn ich gut organisiert bin, dann ist die Sache im Handumdrehen gegessen."
            }
        };
        let dialogoptions = {
            iSayA: "Das klingt in der Tat seltsam.",
            iSayB: "Ein Geist war das jedenfalls nicht..."
        };
        let dialogoptions2 = {
            iSayA: "Wei√üt du, der Sch√ºlerrat ist eigentlich keine Detektei... Egal.",
            iSayB: "Ich bin dabei!"
        };
        Template.addFallingLeaves();
        Template.∆íS.Speech.hide();
        Template.∆íS.Sound.play(Template.sound.schoolBell, 0.5, false);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        await Template.∆íS.Location.show(Template.locations.schoolOutsideTwilight);
        await Template.∆íS.update(2);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        Template.∆íS.Sound.play(Template.sound.birds, 0.5, true);
        await Template.∆íS.update(1);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.happyEyesClosed, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.25);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.stranger, strangerText.Stranger.T0001);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.stranger, strangerText.Stranger.T0002);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0004);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.stranger, strangerText.Stranger.T0003);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0005);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.smiling, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0001);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0001_2);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0006);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.unsure, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0002);
        let dialogoptionsElement = await Template.∆íS.Menu.getInput(dialogoptions, "dialogoptions");
        Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        switch (dialogoptionsElement) {
            case dialogoptions.iSayA:
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0007_a);
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0003_a);
                await Template.∆íS.update(0.5);
                break;
            case dialogoptions.iSayB:
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0007_b);
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.smiling, Template.∆íS.positionPercent(75, 97));
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0003_b);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Character.hide(Template.characters.kira);
                await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
                await Template.∆íS.update(0.5);
                break;
        }
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0003_3);
        let dialogoptionsElement2 = await Template.∆íS.Menu.getInput(dialogoptions2, "dialogoptions");
        Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        switch (dialogoptionsElement2) {
            case dialogoptions2.iSayA:
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0008_a);
                break;
            case dialogoptions2.iSayB:
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0008_b);
                break;
        }
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004_2);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004_3);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004_4);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0009);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0005);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0003);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0010);
        Template.updateNotes();
        Template.∆íS.Sound.play(Template.sound.sparkle, 0.5, false);
        await Template.∆íS.update(2);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.happyEyesClosed, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0011);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0004);
        Template.removeFallingLeaves();
        Template.∆íS.Sound.fade(Template.sound.birds, 0, 3, true);
    }
    Template.intro = intro;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function kiraGivesHint() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Ach ja? Was denn?",
                T0002: "Wirklich? Und wei√üt du auch, zu wem sie geh√∂rt?",
                T0003: "Ich verstehe... Das macht Solas zum Hauptverd√§chtigen. Mal sehen, was er dazu zu sagen hat. Bis sp√§ter, Kira!"
            }
        };
        let kiraText = {
            Kira: {
                T0001: "Hey, ich habe dich gesucht! Mir ist etwas aufgefallen.",
                T0002: "Diese Notiz, die uns der Saboteur hinterlassen hat... Irgendwie kommt mir die Handschrift bekannt vor. Ich habe sie schon oft gesehen.",
                T0003: "Ich wollte sicher gehen, bevor ich mit dir dar√ºber spreche. Deswegen habe ich sie noch einmal mit der Schrift unserer Verd√§chtigen verglichen, um meine Ahnung zu best√§tigen.",
                T0004: "Sie sieht aus wie die Handschrift von... Solas.",
                T0005: "Alles, was ich h√∂re, ist tick tack."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Du l√§ufst durch den Flur und denkst √ºber deine n√§chsten Schritte nach, als du auf Kira triffst.",
                T0001: "Du begibst dich auf die Suche nach Solas, um ihn zu konfrontieren."
            }
        };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0000);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0001);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0002);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0003);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.sad, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        Template.dataForSave.solasHandwriting = true;
        Template.updateNotes();
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.unsure, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0005);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        return "confrontSolasAfterKira";
    }
    Template.kiraGivesHint = kiraGivesHint;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function lightsOut() {
        // how long are the lights out (in seconds)?
        let waitSeconds = 30;
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        // control lights in scene
        function setLights(action) {
            let htmlInDom = document.querySelector("html");
            switch (action) {
                case "turnOffLights":
                    Template.∆íS.Sound.play(Template.sound.switch, 1.5, false);
                    htmlInDom.classList.add("dark");
                    break;
                case "turnOnLights":
                    Template.∆íS.Sound.play(Template.sound.switch, 1.5, false);
                    htmlInDom.classList.remove("dark");
                    break;
                case "turnOnFlashlight":
                    Template.∆íS.Sound.play(Template.sound.flashlight, 1, false);
                    htmlInDom.classList.add("flashlight");
                    break;
                case "turnOffFlashlight":
                    Template.∆íS.Sound.play(Template.sound.flashlight, 1, false);
                    htmlInDom.classList.remove("flashlight");
                    break;
                default:
                    break;
            }
        }
        function updateFlashlight(e) {
            // get current cursor position
            let x = e.clientX || e.touches[0].clientX;
            let y = e.clientY || e.touches[0].clientY;
            // set as position of flashlight with css
            document.documentElement.style.setProperty('--cursorX', x + 'px');
            document.documentElement.style.setProperty('--cursorY', y + 'px');
        }
        // call updateFlashlight on mouse movement
        document.addEventListener('mousemove', updateFlashlight);
        document.addEventListener('touchmove', updateFlashlight);
        let protagonistText = {
            Protagonist: {
                T0001: "Ich habe mir ein gutes erstes Bild verschafft, aber das hat den Saboteur eventuell aufgeschreckt. Er k√∂nnte bald wieder handeln...",
                T0002: "Jemand hat das Licht ausgeschaltet. Warte kurz, an meinem Schl√ºsselbund h√§ngt eine kleine Taschenlampe. Ich suche gleich einen Lichtschalter.",
                T0003: "Ich hab ihn!",
                T0003_b: "Da ist er! Warte, ich laufe kurz hin...",
                T0003_c: "Geduld, bitte. Ich will nirgendwo ansto√üen!",
                T0003_d: "Autsch! Jetzt bin ich gestolpert...",
                T0003_e: "Stress mich nicht! Ich bin fast da.",
                T0004: "Sieh mal, da hat jemand etwas unter der T√ºr durchgeschoben.",
                T0005: "Der Saboteur hat offenbar das Licht ausgeschaltet, um uns im Schutz der Dunkelheit diese Notiz zu hinterlassen. Im Flur gibt es einen zweiten Lichtschalter, das war also ganz einfach.",
                T0006: "Das sehe ich ein. Ich werde dich nicht entt√§uschen.",
                T0007: "Keine Sorge. Morgen werde ich Indizien sammeln und den Schleier l√ºften."
            }
        };
        let kiraText = {
            Kira: {
                T0000: "Hallo, du. Wie kommen deine Ermittlungen voran?",
                T0001: "Ich verstehe. Und was hast du nun-",
                T0002: "Holy Moly! Was ist passiert?",
                T0003: "Puh. Das hat mich ganz sch√∂n erschreckt...",
                T0004: "Was...? Lass mal sehen.",
                T0005: "Das ist ja unheimlich...",
                T0006: "Ich bin beunruhigt. Wer wei√ü, wie weit diese Person gehen wird? Wenn du den Saboteur nicht rechtzeitig findest, dann werde ich die Premiere absagen.",
                T0007: "Ich sage es ungern, aber die Zeit dr√§ngt. In zwei Tagen ist die Premiere."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Die Probe ist zu Ende. Die Clubmitglieder verabschieden sich und trudeln auf den Flur.",
                T0001: "Kira und du bleiben allein im Theaterraum zur√ºck.",
                T0002: "Der Schultag neigt sich dem Ende zu und du verabschiedest dich von Kira. Morgen wirst du deine Ermittlungen fortf√ºhren..."
            }
        };
        await Template.∆íS.Location.show(Template.locations.classroomDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0000);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.smiling, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0000);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.neutral, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0001);
        await Template.∆íS.update(0.5);
        setLights("turnOffLights");
        // change normal theme to spooky music
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0, 3);
        Template.∆íS.Sound.fade(Template.sound.spookyMusic, 0.5, 2.5, true);
        // remove characters and speech, add light switch
        await Template.∆íS.Character.hide(Template.characters.kira);
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(1.5);
        // set classes for possible positions of switch
        let classes = new Array('bottomRight', 'bottomLeft', 'centerLeft', 'centerRight');
        let length = classes.length;
        // get switch img
        let img = document.getElementById("switch");
        // assign random class (therefore position)
        img.classList.add(classes[Math.floor(Math.random() * length)]);
        // make visible
        img.hidden = false;
        img.addEventListener("click", clickSwitch);
        let clickedSwitch = 0;
        async function clickSwitch() {
            Template.∆íS.Speech.clear();
            clickedSwitch += 1;
            if (clickedSwitch == 1) {
                Template.∆íS.Sound.play(Template.sound.smallsigh, 1.5, false);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003_b);
            }
            else if (clickedSwitch == 2) {
                Template.∆íS.Sound.play(Template.sound.smallsigh, 1.5, false);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003_c);
            }
            else if (clickedSwitch == 3) {
                Template.∆íS.Sound.play(Template.sound.aua, 1.5, false);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003_d);
            }
            else {
                Template.∆íS.Sound.play(Template.sound.bigsigh, 1.5, false);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003_e);
            }
        }
        await new Promise(resolve => setTimeout(resolve, 200));
        Template.∆íS.Sound.play(Template.sound.femalegasp, 1.5, false);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0002);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        await Template.∆íS.update(0.5);
        setLights("turnOnFlashlight");
        await new Promise(resolve => setTimeout(resolve, waitSeconds * 1000));
        // remove light switch
        let switchImg = document.getElementById("switch");
        switchImg.remove();
        Template.∆íS.Sound.play(Template.sound.switch, 1, false);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        setLights("turnOnLights");
        Template.∆íS.Speech.clear();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.scared, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0003);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        // change spooky music to normal theme
        Template.∆íS.Sound.fade(Template.sound.spookyMusic, 0, 6);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 5, true);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0004);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.unsure, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0004);
        let diaryPage = "<div class='warningPage'>\
        <p>Meine M√∂chtegern-Detektive,</p>\
        <p>lasst das Scooby-D<bold>oo</bold>-Spiel besser sein.</p>\
        <p>Das is<bold>t</bold> eine Warnung.</p>\
        <p>Die n√§chste wird nicht so nett ausfallen...</p>\
        <p style='text-align: right;'>- Eu<bold>e</bold>r 'Saboteur'</p>\
        </div>";
        Template.∆íS.Text.setClass("warningPageWrapper blendin");
        let close = { done: "x" };
        let choice;
        do {
            Template.∆íS.Text.print(diaryPage);
            choice = await Template.∆íS.Menu.getInput(close, "pageclose");
        } while (choice != close.done);
        Template.∆íS.Text.close();
        Template.dataForSave.warningNote = true;
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0005);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.scared, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0005);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.unsure, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0006);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0006);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.kira, Template.characters.kira.pose.scared, Template.∆íS.positionPercent(75, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.kira, kiraText.Kira.T0007);
        await Template.∆íS.Character.hide(Template.characters.kira);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.confident, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0007);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.lightsOut = lightsOut;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function lookForKey() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Es wird Zeit, meine Ermittlungen fortzusetzen...",
                T0002: "Lucia meinte, sie habe ihren Schl√ºssel zum Theaterraum verloren. Falls das stimmt, dann hatte sie keine Gelegenheit, zwischen den Proben die Sabotage zu begehen.",
                T0003: "Ich suche einfach mal nach dem Schl√ºssel. Wenn ich ihn finde, w√ºrde das Lucias Geschichte best√§tigen... Am besten, ich schaue in der Bibliothek. Sie wohnt ja f√∂rmlich dort.",
                T0004: "Also dann, wo k√∂nnte Lucia den Schl√ºssel verloren haben?",
                T0004_b: "Die Suche geht weiter...",
                T0005: "Also hier schonmal nicht!",
                T0006: "Die M√∂glichkeiten sinken.",
                T0007: "Nope!",
                T0008: "Der Schl√ºssel bleibt verschollen.",
                T0010: "Kein Schl√ºssel... Oh man! Da sollte jemand dringend seine Browser History l√∂schen...",
                T0011: "Da ist er nicht, aber ich habe ein neues Parfum entdeckt: Poubelle No.5. Dior, hit me up!",
                T0012: "Nein. Hier h√§tte man ihn sicher bemerkt...",
                T0013: "Kein Gl√ºck.",
                T0014: "Hier nicht, aber die frische Luft ist sch√∂n.",
                T0015: "Oh, da ist er! Ich 1 - Schl√ºssel 0.",
                T0016: "Ich gebe auf! Ich kann den Schl√ºssel nicht finden. Das war von Anfang an eine Schnapsidee... Ob Lucia die Wahrheit gesagt oder gelogen hat, bleibt wohl oder √ºbel eine Vertrauensfrage...",
                T0017: "Lucia hat also die Wahrheit gesagt. Nat√ºrlich k√∂nnte immer noch ein gro√üer Masterplan dahinter stecken, aber ich bin geneigt, ihr zu vertrauen. Ich werde sie suchen und den Schl√ºssel zur√ºckgeben."
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Es ist Pause! W√§hrend des Unterrichts sind deine Gedanken immer wieder abgedriftet.",
                T0001: "Du betrittst die Bibliothek.",
                T0002: "Du verl√§sst die Bibliothek."
            }
        };
        await Template.∆íS.Location.show(Template.locations.stairs);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        Template.∆íS.Sound.play(Template.sound.schoolBell, 0.5, false);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0000);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0003);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Location.show(Template.locations.library);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0004);
        await Template.∆íS.update(0.5);
        let optionsPlacesToSearch = {
            onShelf: "Im B√ºcherregal",
            inTrash: "Im M√ºlleimer",
            sittingArea: "Beim Sitzbereich",
            inPlantPot: "Im Blumentopf",
            underTable: "Unter dem Tisch",
            onWindowsill: "Fensterbank",
            nextToPc: "Neben dem Computer",
            behindDeskRIGHT: "Hinter der Theke",
            inCorner: "In der Ecke",
            onChair: "Auf dem Stuhl"
        };
        let loopCount = 0;
        while (loopCount < 5) {
            if (loopCount > 0) {
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0004_b);
                await Template.∆íS.update(0.5);
            }
            let optionsPlacesToSearchElement = await Template.∆íS.Menu.getInput(optionsPlacesToSearch, "dialogoptions");
            Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
            switch (optionsPlacesToSearchElement) {
                case optionsPlacesToSearch.behindDeskRIGHT:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0015);
                    await Template.∆íS.update(0.5);
                    Template.dataForSave.foundKey = true;
                    loopCount = 5;
                    delete optionsPlacesToSearch.behindDeskRIGHT;
                    break;
                case optionsPlacesToSearch.inCorner:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0012);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.inCorner;
                    break;
                case optionsPlacesToSearch.inPlantPot:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0005);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.inPlantPot;
                    break;
                case optionsPlacesToSearch.inTrash:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0011);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.inTrash;
                    break;
                case optionsPlacesToSearch.nextToPc:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0010);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.nextToPc;
                    break;
                case optionsPlacesToSearch.onChair:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0006);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.onChair;
                    break;
                case optionsPlacesToSearch.onShelf:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0007);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.onShelf;
                    break;
                case optionsPlacesToSearch.onWindowsill:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0014);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.onWindowsill;
                    break;
                case optionsPlacesToSearch.sittingArea:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0008);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.sittingArea;
                    break;
                case optionsPlacesToSearch.underTable:
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0013);
                    await Template.∆íS.update(0.5);
                    delete optionsPlacesToSearch.underTable;
                    break;
            }
            loopCount++;
        }
        Template.dataForSave.lookedForKey = true;
        switch (Template.dataForSave.foundKey) {
            case true:
                Template.updateNotes();
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0017);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.update(0.5);
                Template.∆íS.Speech.clear();
                Template.∆íS.Speech.hide();
                await Template.∆íS.update(0.5);
                return "luciaGivesHint";
                break;
            case false:
                Template.updateNotes();
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.angry, Template.∆íS.positionPercent(25, 97));
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0016);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
                await Template.∆íS.update(0.5);
                await Template.∆íS.Character.hide(Template.characters.protagonist);
                await Template.∆íS.update(0.5);
                Template.∆íS.Speech.clear();
                Template.∆íS.Speech.hide();
                await Template.∆íS.update(0.5);
                return "kiraGivesHint";
                break;
        }
    }
    Template.lookForKey = lookForKey;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function luciaGivesHint() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let protagonistText = {
            Protagonist: {
                T0001: "Hallo, Lucia. Ich habe deinen Schl√ºssel gefunden und m√∂chte ihn dir zur√ºckgeben.",
                T0002: "Die Sache hat auch sein Gutes. Dass ich deine Geschichte best√§tigen konnte, entlastet dich.",
                T0003_good: "Nur zu, jede Information ist hilfreich.",
                T0003_bad: "Meinetwegen, aber ganz aus dem Schneider bist du nicht...",
                T0004: "Wieso das? Sie ist nicht besonders h√∂flich, aber das hei√üt nicht, dass sie l√ºgt. Nicht wahr?",
                T0005: "Ist das so? Das macht ihre Glaubw√ºrdigkeit nat√ºrlich zweifelhaft.",
                T0006: "Der Hinweis von Lucia war hilfreich. Ich sollte allerdings nicht vergessen, ein n√§heres Auge auf Solas zu werfen. Im Moment ist er derjenige, √ºber den ich am wenigsten wei√ü."
            }
        };
        let luciaText = {
            Lucia: {
                T0001: "Oh, vielen Dank! Ich habe mich schlecht gef√ºhlt, weil ich ihn verloren hatte.",
                T0002: "Nun, w-was das angeht... Ich war mir nicht sicher, ob ich mich einmischen sollte, aber ich muss dir etwas sagen.",
                T0003: "Ich habe vorhin dein Gespr√§ch mit " + Template.dataForSave.nameGirl + " mitbekommen. Ich m√∂chte dich warnen, ihr nicht blind zu vertrauen.",
                T0004: "Darum ging es mir nicht. Es ist nur so... Jeder wei√ü, dass sie in Atlas verknallt ist. Wer wei√ü, ob sie ihn nur decken wollte?",
                T0005: "Das war schon alles, was ich dir sagen wollte. Ich muss jetzt los... Bis bald!"
            }
        };
        let narratorText = {
            Narrator: {
                T0000: "Du l√§ufst auf der Suche nach Lucia durch den Flur und triffst sie schlie√ülich an der Treppe.",
                T0001: "Lucia l√§uft die Treppe hinauf."
            }
        };
        await Template.∆íS.Location.show(Template.locations.stairs);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0000);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0001);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
        Template.showLuciaMeter();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0001);
        Template.hideLuciaMeter();
        await Template.∆íS.Character.hide(Template.characters.lucia);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0002);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
        Template.showLuciaMeter();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0002);
        let optionsLuciaInfo = {
            good: "Nur zu, jede Information ist hilfreich.",
            bad: "Meinetwegen, aber ganz aus dem Schneider bist du nicht..."
        };
        let optionsLuciaInfoElement = await Template.∆íS.Menu.getInput(optionsLuciaInfo, "dialogoptions");
        Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
        switch (optionsLuciaInfoElement) {
            case optionsLuciaInfo.good:
                Template.dataForSave.luciaScore += 4;
                break;
            case optionsLuciaInfo.bad:
                Template.dataForSave.luciaScore -= 4;
                break;
        }
        await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0003);
        Template.hideLuciaMeter();
        await Template.∆íS.Character.hide(Template.characters.lucia);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0004);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
        Template.showLuciaMeter();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0004);
        Template.dataForSave.aboutAlibi = true;
        Template.updateNotes();
        Template.hideLuciaMeter();
        await Template.∆íS.Character.hide(Template.characters.lucia);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0005);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
        Template.showLuciaMeter();
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0005);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.update(0.5);
        Template.hideLuciaMeter();
        await Template.∆íS.Character.hide(Template.characters.lucia);
        await Template.∆íS.update(0.5);
        await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
        await Template.∆íS.update(0.5);
        await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistText.Protagonist.T0006);
        await Template.∆íS.Character.hide(Template.characters.protagonist);
        await Template.∆íS.update(0.5);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
        return "confrontSolasAfterLucia";
    }
    Template.luciaGivesHint = luciaGivesHint;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function motive() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        let narratorText = {
            Narrator: {
                T0001: "Du triffst p√ºnktlich bei der Probe des Theaterclubs ein. Neben den anderen Mitgliedern sind auch deine Verd√§chtigen anwesend.",
                T0002: "Mit wem m√∂chtest du sprechen?",
                T0003: "Schnell ein Foto f√ºr die Notes...",
                T0004: "Du begleitest Lucia zur Bibliothek.",
                T0005: "Du begibst dich zusammen mit Lucia zur√ºck in den Theaterraum."
            }
        };
        // Suspects Texts
        let atlasText = {
            Atlas: {
                T0001: "... ?",
                T0002: "Nur, dass solche amateurhaften Sabotageversuche das Theaterst√ºck nicht stoppen werden.",
                T0003: "Nein, ich bin sehr besch√§ftigt. Ich bin Jahrgangsbester und Schulsprecher, wie du vielleicht wei√üt. Obendrein bin ich Mitglied in mehreren AGs. Der Theaterclub, der Schach-Club, der Kalligraphie-Club... Meinst du wirklich, ich habe Zeit f√ºr solche Kindereien?",
                T0004_good: "Na dann kannst du dir jetzt ein Bild machen.",
                T0004_bad: "Kusch doch nicht gleich. Gute Ermittler sollten etwas mehr R√ºckrat zeigen.",
                T0004_2: "Soll ich dir sagen, was ich denke? Verschwundene Skripte, ein zerst√∂rtes Kost√ºm... Es w√ºrde mich nicht wundern, wenn das alles ein bescheuerter Streich w√§re. Ernst nehme ich das jedenfalls nicht.",
                T0004_3: "Es sei denn...",
                T0005_bad: "Ist das deine Strategie? Du suchst nach L√∂sungen bei deinen Verd√§chtigen? Vielleicht solltest du selbst anfangen nachzudenken.",
                T0005_good: "Es sei denn, du selbst hast die Sabotage inszeniert, um dich wichtig zu machen. Naja, wir werden bald sehen, wie viel hei√üe Luft in deinem Kopf ist...",
                T0006: "Hm... Da wir schon reden, m√∂chte ich dir einen Hinweis geben.",
                T0006_2: "Bitte erz√§hle nicht herum, dass du das von mir hast. Mir ist mein guter Ruf sehr wichtig. Du verstehst das sicher, so von Schulsprecher zu Stellvertreterin.",
                T0007_1: "Solas macht sich wohl in letzter Zeit viel Druck. Es ist das erste Mal, dass die Schule ein Theaterst√ºck genehmigt hat, das von einem Sch√ºler geschrieben wurde. Normalerweise f√ºhrt der Theaterclub nur Klassiker auf.",
                T0007_2: "Solas m√∂chte unbedingt, dass alles perfekt l√§uft. Das St√ºck ist sein Meisterwerk, so etwas verstehen nur K√ºnstler. Aber er hatte keine Zeit mehr, das Skript zu √ºberarbeiten. Wenn nun jedoch die Premiere verschoben werden m√ºsste...",
                T0007_3: "Du verstehst, worauf ich hinaus will, ja?",
                T0008_good: "Und du bist √ºberraschend scharfz√ºngig. Na dann, viel Erfolg.",
                T0008_bad: "Das kann ja nur schiefgehen..."
            }
        };
        let luciaText = {
            Lucia: {
                T0001: "... ?",
                T0002: "Oh! Gerade passt es schlecht, ich habe etwas in der Bibliothek vergessen, das ich holen gehen wollte... Komm doch einfach mit und wir sprechen dort.",
                T0003: "So, da sind wir schon. Es gibt nichts sch√∂neres als den Geruch alter B√ºcher, findest du nicht?",
                T0004_bad: "Wenn du meinst...",
                T0004_good: "Britische Forscher haben das Aroma alter B√ºcher einmal beschrieben. Die Duftnote sei eine Kombination aus Gras-Noten, einer Spur S√§ure und einem Hauch Vanille. So muss Magie riechen.",
                T0005: "Du meinst unser Theaterst√ºck? N-Nat√ºrlich. Kira glaubt, dahinter steckt jemand mit einer klaren Intention.",
                T0006: "Ja, drei von uns besitzen einen Schl√ºssel. Atlas, weil er ungest√∂rt Zusatzproben machen m√∂chte. Solas, weil er als Autor und Regisseur von der Vorbereitung bis zur Premiere alles steuert. Und ich, weil ich hin und wieder an der Technik feilen muss.",
                T0007: "Das macht Sinn... Nur hatte ich keinen Zugang. Ich habe meinen Schl√ºssel vor ein paar Tagen verloren.",
                T0008: "T-Tut mir leid, das kann ich dir auch nicht sagen. Aber ich habe vor kurzem etwas in der Bibliothek gefunden, das f√ºr dich von Interesse sein k√∂nnte...",
                T0009: "Ich kam neulich hier an, als Atlas seine Sachen gepackt hat. Ich habe mich an seinen Tisch gesetzt und er hat das hier vergessen. Es sieht aus wie eine Seite aus einem Tagebuch.",
                T0010: "Damit hast du wohl Recht. Trotzdem...",
                T0011: "Ich hoffe, ich konnte dir weiterhelfen.",
                T0012_good: "Dann bis bald.",
                T0012_bad: "Haha..."
            }
        };
        let solasText = {
            Solas: {
                T0001: "Oh?",
                T0002: "Was ich dar√ºber denke? Nun... Es ist keine sch√∂ne Sache, nicht wahr? Ich habe mein  Herz in dieses St√ºck gesteckt.",
                T0003: "Ja, nat√ºrlich. Wir haben sofort neue Skripte f√ºr jeden gedruckt. Es war trotzdem l√§stig, weil ich Notizen auf mein Skript geschrieben hatte. Anmerkungen und solche Sachen. Die sind jetzt leider verloren.",
                T0004: "Ich kann mir vorstellen, wieso. Nur drei Mitglieder haben Zugang zum Theaterraum au√üerhalb der Proben. Darf ich auch ehrlich mit dir sein?",
                T0005_bad: "Dass jemand das St√ºck sabotieren will, kann ich nicht nachvollziehen, aber es inspiriert mich auch. Was steckt dahinter, wenn jemand zu solchen Mitteln greift? Ich denke es ist Verzweiflung. Starke Gef√ºhle sind eine Quelle der Kreativit√§t, aber sie k√∂nnen ebenso destruktiv wirken.",
                T0005_good: "Irgendwie habe ich Mitleid mit der Person, die dahinter steckt. Unter der Oberfl√§che entpuppt sich jedes noch so triviale Motiv als Ausdruck f√ºr etwas Tieferes, denkst du nicht?",
                T0006: "Nun ja... Ich m√∂chte niemanden anschw√§rzen, aber Lucia spricht viel √ºber den Theaterclub. Leider nicht viel Gutes. Warte, ich zeige dir ein Beispiel, damit du wei√üt, was ich meine.",
                T0007: "Das muss noch nichts hei√üen. In dubio pro reo.",
                T0008_good: "Ich bin zuversichtlich, dass am Ende die Wahrheit √ºbrig sein wird.",
                T0008_bad: "Mir ist entgangen, dass das mein Problem ist.",
                T0009: "Denk daran. Wichtiger als die Fakten, sind die Menschen. Manchmal tr√ºgt der Schein... und manchmal sind die Leute genau so, wie sie auf den ersten Blick anmuten.",
                T0010_good: "Auf Wiedersehen.",
                T0010_bad: "Ciao."
            }
        };
        // Protagonist Texts
        let protagonistToAtlas = {
            Protagonist: {
                T0001: "Hallo, ich h√∂re mich nur ein wenig um. Jemand hat es wohl auf den Theaterclub abgesehen und m√∂chte eure Auff√ºhrung verhindern. Wei√üt du etwas dar√ºber?",
                T0003: "Dann hast du nichts damit zu tun?",
                T0004_a: "Ich kenne deinen Terminkalender nicht.",
                T0004_b: "Sorry, ich wollte dich nicht anklagen.",
                T0005_a: "Es sei denn... was? Hast du einen Verdacht?",
                T0005_b: "Spucks aus, du Angeber.",
                T0006: "Wars das?",
                T0007: "Ich h√∂re?",
                T0008_a: "Das war √ºberraschend hilfreich. Ich danke dir.",
                T0008_b: "Pff... Alles klar. Und tsch√ºss."
            }
        };
        let protagonistToLucia = {
            Protagonist: {
                T0001: "Du bist Lucia, richtig? K√∂nnte ich kurz mit dir reden?",
                T0002: "In Ordnung.",
                T0003_a: "Ganz sch√∂n muffig.",
                T0003_b: "Das finde ich auch.",
                T0004: "Ja... Wor√ºber ich eigentlich mit dir sprechen wollte... Du hast doch sicher mitbekommen, dass jemand eure Auff√ºhrung verhindern m√∂chte.",
                T0005: "Das denke ich auch. Wei√üt du, Kira hat mich beauftragt, den Saboteur zu entlarven. Du bist eine von wenigen, die uneingeschr√§nkten Zugang zum Theaterraum haben.",
                T0006: "Ich glaube, einer von euch ist f√ºr die Sabotage verantwortlich. Niemand sonst hatte eine Gelegenheit.",
                T0007: "Ich verstehe. Wenn das wahr ist, kann ich dich ausschlie√üen. Aber woher wei√ü ich, ob das stimmt?",
                T0008: "Tats√§chlich?",
                T0009_a: "Ein Tagebuch? Das sollte ich nicht lesen, es sind private Gedanken.",
                T0009_b: "Her damit.",
                T00010: "Atlas hat wirklich eine sch√∂ne Schrift... und er mag mich nicht, weil ich ihm den Titel des Jahrgangsbesten streitig mache. Interessant."
            }
        };
        let protagonistToSolas = {
            Protagonist: {
                T0001: "Hey, ich w√ºrde gerne mal mit dir reden. Kurz und knapp: Was denkst du √ºber die Sabotage eures Theaterst√ºcks?",
                T0002: "Das tut mir leid. Dass die Skripte verschwunden sind, ist √§rgerlich, aber du hast das Original bestimmt digital gespeichert, oder?",
                T0003: "Ich verstehe... Darf ich ehrlich mit dir sein? Ich versuche herauszufinden, wer dahinter steckt. Drei Leute sind verd√§chtig, darunter auch du.",
                T0004_a: "Here we go.",
                T0004_b: "Nat√ºrlich.",
                T0005: "Das... kann gut sein. Du bist ein interessanter Typ, wei√üt du das? Hast du wom√∂glich einen Hinweis darauf, wer der T√§ter sein k√∂nnte?",
                T0006: "Lucia hat offenbar eine Menge negative Gef√ºhle angestaut...",
                T0007_a: "Ich finde dich sehr verd√§chtig.",
                T0007_b: "Macht es dich nicht nerv√∂s, dass du unter Verdacht stehst?",
                T0008_a: "Nun gut. Bis bald.",
                T0008_b: "Du machst mich irre. Ciao!"
            }
        };
        // Dialog Options to start talk (to be called in while loop)
        let startTalk = {
            withAtlas: "Atlas",
            withSolas: "Solas",
            withLucia: "Lucia"
        };
        // Atlas Dialog Options
        let optionsAtlasBusy = {
            good: "Ich kenne deinen Terminkalender nicht.",
            bad: "Sorry, ich wollte dich nicht anklagen."
        };
        let optionsAtlasUnless = {
            bad: "Es sei denn... was? Hast du einen Verdacht?",
            good: "Spucks aus, du Angeber."
        };
        let optionsAtlasGoodbye = {
            good: "Das war √ºberraschend hilfreich. Ich danke dir.",
            bad: "Pff... Alles klar. Und tsch√ºss."
        };
        // Lucia Dialog Options
        let optionsLuciaBooks = {
            bad: "Ganz sch√∂n muffig",
            good: "Das finde ich auch."
        };
        let optionsLuciaDiary = {
            bad: "Ein Tagebuch? Das sollte ich nicht lesen, es sind private Gedanken.",
            good: "Her damit."
        };
        let optionsLuciaGoodbye = {
            good: "Ja, vielen Dank.",
            bad: "Streng dich das n√§chste Mal bitte etwas mehr an."
        };
        // Solas Dialog Options
        let optionsSolasHonest = {
            bad: "Here we go.",
            good: "Nat√ºrlich."
        };
        let optionsSolasSuspect = {
            bad: "Ich finde dich sehr verd√§chtig.",
            good: "Macht es dich nicht nerv√∂s, dass du unter Verdacht stehst?"
        };
        let optionsSolasGoodbye = {
            good: "Nun gut. Bis bald.",
            bad: "Du machst mich irre. Ciao!"
        };
        await Template.∆íS.Location.show(Template.locations.classroomDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0001);
        await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
        let loopCount = 0;
        let loopLength = Object.keys(startTalk).length;
        while (loopCount < loopLength) {
            if (loopCount > 0) {
                await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0002);
            }
            let startTalkElement = await Template.∆íS.Menu.getInput(startTalk, "dialogoptions");
            Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
            switch (startTalkElement) {
                // CASE Talk To Atlas
                case startTalk.withAtlas:
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0003);
                    await Template.∆íS.update(0.5);
                    await new Promise(resolve => setTimeout(resolve, 500));
                    Template.simulateCameraFlash();
                    Template.dataForSave.atlasPortrait = true;
                    Template.updateNotes();
                    await Template.∆íS.update(0.2);
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.angry, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(1);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0001);
                    await Template.∆íS.update(0.5);
                    Template.hideAtlasMeter();
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToAtlas.Protagonist.T0001);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0002);
                    Template.hideAtlasMeter();
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToAtlas.Protagonist.T0003);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0003);
                    let optionsAtlasBusyElement = await Template.∆íS.Menu.getInput(optionsAtlasBusy, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    switch (optionsAtlasBusyElement) {
                        case optionsAtlasBusy.good:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.playful, Template.∆íS.positionPercent(75, 97));
                            Template.showAtlasMeter();
                            Template.dataForSave.atlasScore += 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0004_good);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsAtlasBusy.bad:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.angry, Template.∆íS.positionPercent(75, 97));
                            document.getElementsByName("atlasScore").forEach(meterChildren => meterChildren.hidden = false);
                            Template.dataForSave.atlasScore -= 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0004_bad);
                            await Template.∆íS.update(0.5);
                    }
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0004_2);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0004_3);
                    let optionsAtlasUnlessElement = await Template.∆íS.Menu.getInput(optionsAtlasUnless, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsAtlasUnlessElement) {
                        case optionsAtlasUnless.bad:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.playful, Template.∆íS.positionPercent(75, 97));
                            Template.showAtlasMeter();
                            Template.dataForSave.atlasScore -= 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0005_bad);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsAtlasUnless.good:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.playful, Template.∆íS.positionPercent(75, 97));
                            Template.showAtlasMeter();
                            Template.dataForSave.atlasScore += 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0005_good);
                            await Template.∆íS.update(0.5);
                    }
                    Template.hideAtlasMeter();
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.angry, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToAtlas.Protagonist.T0006);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0006);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.happy, Template.∆íS.positionPercent(75, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0006_2);
                    Template.hideAtlasMeter();
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToAtlas.Protagonist.T0007);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showAtlasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0007_1);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0007_2);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0007_3);
                    await Template.∆íS.update(0.5);
                    Template.dataForSave.solasMotive = true;
                    Template.updateNotes();
                    let optionsAtlasGoodbyeElement = await Template.∆íS.Menu.getInput(optionsAtlasGoodbye, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    switch (optionsAtlasGoodbyeElement) {
                        case optionsAtlasGoodbye.good:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.playful, Template.∆íS.positionPercent(75, 97));
                            Template.showAtlasMeter();
                            Template.dataForSave.atlasScore += 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0008_good);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsAtlasGoodbye.bad:
                            await Template.∆íS.Character.hide(Template.characters.atlas);
                            await Template.∆íS.Character.show(Template.characters.atlas, Template.characters.atlas.pose.angry, Template.∆íS.positionPercent(75, 97));
                            Template.showAtlasMeter();
                            Template.dataForSave.atlasScore -= 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.atlas, atlasText.Atlas.T0008_bad);
                            await Template.∆íS.update(0.5);
                    }
                    Template.hideAtlasMeter();
                    await Template.∆íS.Character.hide(Template.characters.atlas);
                    await Template.∆íS.update(0.5);
                    delete startTalk.withAtlas;
                    break;
                // CASE Talk To Solas
                case startTalk.withSolas:
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0003);
                    await Template.∆íS.update(0.5);
                    await new Promise(resolve => setTimeout(resolve, 500));
                    Template.simulateCameraFlash();
                    Template.dataForSave.solasPortrait = true;
                    Template.updateNotes();
                    await Template.∆íS.update(0.2);
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.confused, Template.∆íS.positionPercent(75, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    await Template.∆íS.update(1);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0001);
                    await Template.∆íS.update(0.5);
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToSolas.Protagonist.T0001);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0002);
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToSolas.Protagonist.T0002);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0003);
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToSolas.Protagonist.T0003);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0004);
                    let optionsSolasHonestElement = await Template.∆íS.Menu.getInput(optionsSolasHonest, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsSolasHonestElement) {
                        case optionsSolasHonest.bad:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.unhappy, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore -= 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0005_bad);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsSolasHonest.good:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.thoughtful, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore += 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0005_good);
                            await Template.∆íS.update(0.5);
                            break;
                    }
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToSolas.Protagonist.T0005);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0006);
                    let diaryPage = '\
                        <div class="content">\
                            <div class="chatcontainer">\
                                <p class="chatname">Lucia:</p>\
                                <p>Ich bin es einfach leid tbh üòë Ich gebe alles f√ºr diesen Club, aber h√∂re ich mal ein Danke? Nein.</p>\
                                <span class="time-right">11:00</span>\
                            </div>\
                            \
                            <div class="chatcontainer darker">\
                                <p class="chatname">Solas:</p>\
                                <p>Das tut mir leid üò£</p>\
                                <span class="time-right">11:01</span>\
                            </div>\
                            \
                            <div class="chatcontainer">\
                                <p class="chatname">Lucia:</p>\
                                <p>Es liegt einfach daran, dass ich hinter den Kulissen arbeite. Nur, weil ich nicht als ‚≠êStar‚≠ê auf der B√ºhne stehe, werde ich von den anderen wie Luft behandelt.</p>\
                                <span class="time-right">11:02</span>\
                            </div>\
                            \
                            <div class="chatcontainer">\
                                <p class="chatname">Lucia:</p>\
                                <p>Ich will eigentlich nur etwas Wertsch√§tzung..</p>\
                                <span class="time-right">11:02</span>\
                            </div>\
                            \
                            <div class="chatcontainer darker">\
                                <p class="chatname">Solas:</p>\
                                <p>Das wird schon üåû In zwei Tagen ist die Premiere! Wenn am Ende alle applaudieren, stehen auch du und ich auf der B√ºhne.</p>\
                                <span class="time-right">11:05</span>\
                            </div>\
                    </div>';
                    Template.∆íS.Text.setClass("smartphone blendin");
                    let close = { done: "x" };
                    let choice;
                    do {
                        Template.∆íS.Text.print(diaryPage);
                        choice = await Template.∆íS.Menu.getInput(close, "pageclose");
                    } while (choice != close.done);
                    Template.∆íS.Text.close();
                    await Template.∆íS.update(0.5);
                    Template.dataForSave.luciaMotive = true;
                    Template.updateNotes();
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToSolas.Protagonist.T0006);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0007);
                    let optionsSolasSuspectElement = await Template.∆íS.Menu.getInput(optionsSolasSuspect, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsSolasSuspectElement) {
                        case optionsSolasSuspect.bad:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.upset, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore -= 20;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0008_bad);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsSolasSuspect.good:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.happy, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore += 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0008_good);
                            await Template.∆íS.update(0.5);
                            break;
                    }
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showSolasMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0009);
                    let optionsSolasGoodbyeElement = await Template.∆íS.Menu.getInput(optionsSolasGoodbye, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsSolasGoodbyeElement) {
                        case optionsSolasGoodbye.bad:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.sad, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore -= 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0010_bad);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsSolasGoodbye.good:
                            await Template.∆íS.Character.hide(Template.characters.solas);
                            await Template.∆íS.Character.show(Template.characters.solas, Template.characters.solas.pose.happy, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.solasScore += 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.solas, solasText.Solas.T0010_good);
                            await Template.∆íS.update(0.5);
                            break;
                    }
                    Template.hideSolasMeter();
                    await Template.∆íS.Character.hide(Template.characters.solas);
                    await Template.∆íS.update(0.5);
                    delete startTalk.withSolas;
                    break;
                // CASE Talk To Lucia
                case startTalk.withLucia:
                    // go to library with her
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0003);
                    await Template.∆íS.update(0.5);
                    await new Promise(resolve => setTimeout(resolve, 500));
                    Template.simulateCameraFlash();
                    Template.dataForSave.luciaPortrait = true;
                    Template.updateNotes();
                    await Template.∆íS.update(0.2);
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    await Template.∆íS.update(1);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0001);
                    await Template.∆íS.update(0.5);
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0001);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0002);
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0002);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0004);
                    await Template.∆íS.update(0.5);
                    // LIBRARY
                    await Template.∆íS.Location.show(Template.locations.library);
                    await Template.∆íS.update(Template.transition.waves.duration, Template.transition.waves.alpha, Template.transition.waves.edge);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0003);
                    await Template.∆íS.update(0.5);
                    let optionsLuciaBooksElement = await Template.∆íS.Menu.getInput(optionsLuciaBooks, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsLuciaBooksElement) {
                        case optionsLuciaBooks.bad:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.sad, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore -= 30;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0004_bad);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsLuciaBooks.good:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.smiling, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore += 10;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0004_good);
                            await Template.∆íS.update(0.5);
                    }
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    Template.∆íS.Speech.clear();
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0004);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0005);
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0005);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0006);
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.serious, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0006);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0007);
                    Template.dataForSave.luciaOpportunity = true;
                    Template.updateNotes();
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0007);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0008);
                    Template.hideLuciaMeter();
                    await Template.∆íS.Character.hide(Template.characters.lucia);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.surprised, Template.∆íS.positionPercent(25, 97));
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T0008);
                    await Template.∆íS.Character.hide(Template.characters.protagonist);
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0009);
                    let optionsLuciaDiaryElement = await Template.∆íS.Menu.getInput(optionsLuciaDiary, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsLuciaDiaryElement) {
                        case optionsLuciaDiary.bad:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore -= 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0010);
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            Template.dataForSave.atlasMotive = true;
                            Template.dataForSave.atlasNoDiary = true;
                            Template.updateNotes();
                            break;
                        case optionsLuciaDiary.good:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.unsure, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore += 5;
                            let diaryPage = "<div class='diaryPage'>\
                            <p>Mein Tagebuch,</p>\
                            <p>ich muss zugeben, dass ich frustriert bin. Sollen meine Bem√ºhungen umsonst gewesen sein?</p>\
                            <p>Jeder mit Augen im Kopf muss doch erkennen, dass ich mit Abstand der beste Sch√ºler an dieser Schule bin... Trotzdem droht der Titel des Jahrgangsbesten mir nun abhanden zu kommen.</p>\
                            <p>Ausgerechnet die stellvertretende Schulsprecherin macht mir Konkurrenz. Dabei erhalte ich die Auszeichnung jedes Schuljahr mit Leichtigkeit, also wie konnte es dazu kommen? Habe ich mich mit dem Amt des Schulsprechers und den vielen AGs etwa √ºbernommen?</p>\
                            <p>Ich w√ºnschte, meine Stellvertreterin st√ºnde unter demselben Druck wie ich. Dann w√ºrden faire Bedingungen herrschen.</p>\
                            <p style='text-align: right'>Gezeichnet, Atlas.</p>\
                            </div>";
                            Template.∆íS.Text.setClass("diaryPageWrapper blendin");
                            let close = { done: "x" };
                            let choice;
                            do {
                                Template.∆íS.Text.print(diaryPage);
                                choice = await Template.∆íS.Menu.getInput(close, "pageclose");
                            } while (choice != close.done);
                            Template.∆íS.Text.close();
                            await Template.∆íS.update(0.5);
                            Template.dataForSave.atlasMotive = true;
                            Template.dataForSave.atlasDiary = true;
                            Template.updateNotes();
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.update(0.5);
                            Template.hideLuciaMeter();
                            await Template.∆íS.Character.show(Template.characters.protagonist, Template.characters.protagonist.pose.neutral, Template.∆íS.positionPercent(25, 97));
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.protagonist, protagonistToLucia.Protagonist.T00010);
                            await Template.∆íS.Character.hide(Template.characters.protagonist);
                            await Template.∆íS.update(0.5);
                    }
                    await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.neutral, Template.∆íS.positionPercent(75, 97));
                    Template.showLuciaMeter();
                    await Template.∆íS.update(0.5);
                    await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0011);
                    await Template.∆íS.update(0.5);
                    let optionsLuciaGoodbyeElement = await Template.∆íS.Menu.getInput(optionsLuciaGoodbye, "dialogoptions");
                    Template.∆íS.Sound.play(Template.sound.selectDialog, 1.5, false);
                    await Template.∆íS.update(0.5);
                    switch (optionsLuciaGoodbyeElement) {
                        case optionsLuciaGoodbye.good:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.smiling, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore += 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0012_good);
                            await Template.∆íS.update(0.5);
                            Template.hideLuciaMeter();
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.update(0.5);
                            break;
                        case optionsLuciaGoodbye.bad:
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.Character.show(Template.characters.lucia, Template.characters.lucia.pose.sad, Template.∆íS.positionPercent(75, 97));
                            Template.dataForSave.luciaScore -= 5;
                            await Template.∆íS.update(0.5);
                            await Template.∆íS.Speech.tell(Template.characters.lucia, luciaText.Lucia.T0012_bad);
                            await Template.∆íS.update(0.5);
                            Template.hideLuciaMeter();
                            await Template.∆íS.Character.hide(Template.characters.lucia);
                            await Template.∆íS.update(0.5);
                    }
                    await Template.∆íS.Speech.tell(null, narratorText.Narrator.T0005);
                    // CLUB ROOM
                    await Template.∆íS.Location.show(Template.locations.classroomDay);
                    await Template.∆íS.update(Template.transition.waves.duration, Template.transition.waves.alpha, Template.transition.waves.edge);
                    delete startTalk.withLucia;
                    break;
            }
            loopCount++;
        }
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0, 3, true);
    }
    Template.motive = motive;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function roofAtlas() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        // let isFavorite = findFavorite();
        // drei f√§lle f√ºr die erkl√§rung:
        // diary true und key true
        // diary false und key false
        // diary false und key true ODER diary true und key false
        // let conclusionDiaryKey = {
        //     Protagonist: {
        //         T0001: "Lucia erwies sich als vertrauensw√ºrdig. Sie gab mir den Tipp, dass dein Alibi zum Himmel stinkt.",
        //         T0002: "Au√üerdem hatte der T√§ter uns eine Warnung zukommen lassen. Diese Warnung verglich ich mit einer Probe deiner Handschrift...",
        //         T0003: "Auf den ersten Blick √§hnelten sie sich nicht, aber ein paar Buchstaben sehen identisch aus. Ich glaube, du hast versucht, eine andere Handschrift zu imitieren."
        //         T0004: "Und zu guter Letzt... Ich bin ein guter Menschenkenner. Solas wirkte aufrichtig, als er sein Mitgef√ºhl mit der Kost√ºmschneiderin √§u√üerte.",
        //}
        // };
        // let conclusionNoDiaryNoKey = {
        //     Protagonist: {
        //         T0001: "Der T√§ter hatte uns eine Warnung zukommen lassen. Es sah erst so aus, als geh√∂re die Handschrift zu Solas...",
        //         T0002: "Solas wiederum brachte mich auf die Idee, dass jemand seine Handschrift imitiert haben k√∂nnte. Deswegen sah ich mir die Warnung noch einmal an...",
        //         T0003: "Dabei fiel mir auf, dass einige Buchstaben aus der Reihe tanzten. So war mir klar, dass jemand Solas die Sache anh√§ngen wollte.",
        //         T0004: "Aber wer k√∂nnte so meisterhaft eine andere Handschrift f√§lschen? Du, nat√ºrlich. Seit Jahren bist du Mitglied in der Kalligraphie AG. Lucia, der Nerd, hat dagegen wahrscheinlich noch nie einen Stift benutzt."
        //     }
        // };
        // let conclusionNoDiaryKey = {
        //     Protagonist: {
        //         T0001: "Lucia erwies sich als vertrauensw√ºrdig. Sie gab mir den Tipp, dass dein Alibi zum Himmel stinkt.",
        //         T0002: "Au√üerdem hatte der T√§ter uns eine Warnung zukommen lassen. Dabei fiel mir auf, dass einige Buchstaben aus der Reihe tanzten...",
        //         T0003: "Jemand hatte also versucht, die Schrift eines anderen zu imitieren. Doch wer h√§tte die F√§higkeit dazu? Du, nat√ºrlich. Seit Jahren bist du Mitglied in der Kalligraphie AG"
        //         T0004: "Und zu guter Letzt... Ich bin ich ein guter Menschenkenner. Solas wirkte aufrichtig, als er sein Mitgef√ºhl mit der Kost√ºmschneiderin √§u√üerte."
        //     }
        // };
        // let protagonistText = {
        //     Protagonist: {
        //         T0001: "Ich habe dich hergerufen, um dich zu stellen. Ich wei√ü, dass du der Saboteur bist. Du bist √ºberf√ºhrt, Atlas.",
        //         T0002: "Na gut, lass mich dir meine Schlussfolgerungen darlegen...",
        //         T0003: "Reicht dir das?"
        //     }
        // };
        // let kiraText = {
        //     Kira: {
        //         T0001: "Huh?"
        //     }
        // };
        // let atlasText = {
        //     Atlas: {
        //         T0001: "√úberf√ºhrt, ja? Wieso glaubst du, dass ich der T√§ter bin?",
        //         T0002: "Schon gut, ich gebe es zu. Du hast mich in meinem eigenen Spiel besiegt.",
        //         T0003: "Ich habe die Sabotage inszeniert, um dir ein wenig Zeit zu stehlen. Jede freie Minute steckt deine Nase in einem Buch. Ich wollte nicht, dass du mir den Titel des Jahrgangsbesten abnimmst.",
        //         T0004: "Solas sagte etwas dar√ºber, dass hinter der Sabotage etwas Tieferes steckt... und es stimmt. Ich glaube, ich hatte Angst. Wenn ich nicht der Beste sein kann... wer bin ich dann √ºberhaupt?",
        //         T0005: "Ich sehe jetzt ein, dass das dumm war."
        //     }
        // };
        // let narratorTextAtlasFavorit = {
        //     Narrator: {
        //         T0000: "Atlas gibt also zu, der T√§ter zu sein. Die Entscheidung liegt nun bei dir..."
        //     }
        // };
        // let narratorText = {
        //     Narrator: {
        //         T0000: "Atlas gibt also zu, der T√§ter zu sein. Gute Arbeit!"
        //     }
        // };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.roofAtlas = roofAtlas;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function roofLucia() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        // let protagonistText = {
        //     Protagonist: {
        //         T0001: "Ich habe dich hergerufen, um dich zu stellen. Ich wei√ü, dass du der Saboteur bist. Du bist √ºberf√ºhrt, Lucia.",
        //         T0002: "Oh nein... Habe ich mich etwa geirrt?"
        //     }
        // };
        // let kiraText = {
        //     Protagonist: {
        //         T0001: "Huh?"
        //     }
        // };
        let luciaText = {
            Lucia: {
                T0001: "Du glaubst, ich bin der T√§ter...?",
                T0002: "Es tut mir leid, dich zu entt√§uschen, aber ich bin es wirklich nicht. Ich liebe den Theaterclub von Herzen."
            }
        };
        // let narratorText = {
        //     Narrator: {
        //         T0000: ""
        //     }
        // };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.roofLucia = roofLucia;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function roofSolas() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        // let protagonistText = {
        //     Protagonist: {
        //         T0001: "Ich habe dich hergerufen, um dich zu stellen. Ich wei√ü, dass du der Saboteur bist. Du bist √ºberf√ºhrt, Solas."
        //     }
        // };
        // let kiraText = {
        //     Protagonist: {
        //         T0001: "Huh?"
        //     }
        // };
        // let solasText = {
        //     Protagonist: {
        //         T0001: "Huh?"
        //     }
        // };
        // let narratorText = {
        //     Narrator: {
        //         T0000: "Es ist fr√ºh morgens und du betrittst die Schule. Nach ein paar Schritten stoppt dich ein M√§dchen auf dem Korridor."
        //     }
        // };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.roofSolas = roofSolas;
})(Template || (Template = {}));
var Template;
(function (Template) {
    async function yourConclusion() {
        Template.∆íS.Sound.fade(Template.sound.splashMusic, 0, 0.0, true);
        Template.∆íS.Sound.fade(Template.sound.mainMusic, 0.5, 0.1, true);
        Template.updateNotes();
        // let protagonistText = {
        //     Protagonist: {
        //         T0001: "Huh?"
        //     }
        // };
        // let kiraText = {
        //     Protagonist: {
        //         T0001: "Schau dir alles, was du gesammelt hast, noch einmal genau an und suche nach Unstimmigkeiten.",
        //     }
        // };
        // let luciaText = {
        //     Protagonist: {
        //         T0001: "Huh?"
        //     }
        // };
        // let narratorText = {
        //     Narrator: {
        //         T0000: "Es ist fr√ºh morgens und du betrittst die Schule. Nach ein paar Schritten stoppt dich ein M√§dchen auf dem Korridor."
        //     }
        // };
        await Template.∆íS.Location.show(Template.locations.corridorDay);
        await Template.∆íS.update(Template.transition.fizzle.duration, Template.transition.fizzle.alpha, Template.transition.fizzle.edge);
        // close
        Template.∆íS.Speech.clear();
        Template.∆íS.Speech.hide();
        await Template.∆íS.update(0.5);
    }
    Template.yourConclusion = yourConclusion;
})(Template || (Template = {}));
//# sourceMappingURL=Template.js.map